/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-15 14:56:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.auth;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Map;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.Map");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');


    Map<String, String> errors = (Map<String, String>) session.getAttribute("errors");
    session.removeAttribute("errors");


    com.sportflow.dto.RegisterDTO old = (com.sportflow.dto.RegisterDTO) session.getAttribute("old");
    session.removeAttribute("old");

    String errorUser = (String) session.getAttribute("errorUser");
    session.removeAttribute("errorUser");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html :class=\"{ 'theme-dark': dark }\" x-data=\"data()\" lang=\"en\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title>Create account - Windmill Dashboard</title>\n");
      out.write("    <link\n");
      out.write("      href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("    />\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/tailwind.output.css\" />\n");
      out.write("    <script\n");
      out.write("      src=\"https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js\"\n");
      out.write("      defer\n");
      out.write("    ></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/init-alpine.js\"></script>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n");
      out.write("      <div\n");
      out.write("        class=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\"\n");
      out.write("      >\n");
      out.write("        <div class=\"flex flex-col overflow-y-auto md:flex-row\">\n");
      out.write("          <div class=\"h-32 md:h-auto md:w-1/2\">\n");
      out.write("            <img\n");
      out.write("              aria-hidden=\"true\"\n");
      out.write("              class=\"object-cover w-full h-full dark:hidden\"\n");
      out.write("              src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/img/create-account-office.jpeg\"\n");
      out.write("              alt=\"Office\"\n");
      out.write("            />\n");
      out.write("            <img\n");
      out.write("              aria-hidden=\"true\"\n");
      out.write("              class=\"hidden object-cover w-full h-full dark:block\"\n");
      out.write("              src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/img/create-account-office-dark.jpeg\"\n");
      out.write("              alt=\"Office\"\n");
      out.write("            />\n");
      out.write("          </div>\n");
      out.write("          <div class=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n");
      out.write("            <div class=\"w-full\">\n");
      out.write("              <h1\n");
      out.write("                class=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\"\n");
      out.write("              >\n");
      out.write("                Create account\n");
      out.write("              </h1>\n");
      out.write("\n");
      out.write("\n");
      out.write("              <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/auth/register\" method=\"POST\">\n");
      out.write("                <label class=\"block text-sm\">\n");
      out.write("                    <span class=\"text-gray-700 dark:text-gray-400\">First name</span>\n");
      out.write("                    <input\n");
      out.write("                      class=\"block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input\"\n");
      out.write("                      placeholder=\"Jane Doe\"\n");
      out.write("                      name=\"firstName\"\n");
      out.write("                      value=\"");
      out.print( old != null ? old.getFirstName() : "" );
      out.write("\"\n");
      out.write("                    />\n");
      out.write("                      ");
 if (errors != null && errors.containsKey("firstName")) { 
      out.write("\n");
      out.write("                          <span class=\"text-xs text-red-600 dark:text-red-400\">\n");
      out.write("                            ");
      out.print( errors.get("firstName") );
      out.write("\n");
      out.write("                          </span>\n");
      out.write("                      ");
 } 
      out.write("\n");
      out.write("                  </label>\n");
      out.write("                  <label class=\"block text-sm\">\n");
      out.write("                      <span class=\"text-gray-700 dark:text-gray-400\">Last name</span>\n");
      out.write("                      <input\n");
      out.write("                        class=\"block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input\"\n");
      out.write("                        placeholder=\"Jane Doe\"\n");
      out.write("                        name=\"lastName\"\n");
      out.write("                        value=\"");
      out.print( old != null ? old.getLastName() : "" );
      out.write("\"\n");
      out.write("                      />\n");
      out.write("                      ");
 if (errors != null && errors.containsKey("lastName")) { 
      out.write("\n");
      out.write("                            <span class=\"text-xs text-red-600 dark:text-red-400\">\n");
      out.write("                              ");
      out.print( errors.get("lastName") );
      out.write("\n");
      out.write("                            </span>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                  </label>\n");
      out.write("                  <label class=\"block text-sm\">\n");
      out.write("                        <span class=\"text-gray-700 dark:text-gray-400\">Email</span>\n");
      out.write("                        <input\n");
      out.write("                          class=\"block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input\"\n");
      out.write("                          placeholder=\"Jane Doe\"\n");
      out.write("                          name=\"email\"\n");
      out.write("                          value=\"");
      out.print( old != null ? old.getEmail() : "" );
      out.write("\"\n");
      out.write("                        />\n");
      out.write("                        ");
 if (errors != null && errors.containsKey("email")) { 
      out.write("\n");
      out.write("                              <span class=\"text-xs text-red-600 dark:text-red-400\">\n");
      out.write("                                ");
      out.print( errors.get("email") );
      out.write("\n");
      out.write("                              </span>\n");
      out.write("                        ");
 } 
      out.write("\n");
      out.write("                  </label>\n");
      out.write("                  <label class=\"block mt-4 text-sm\">\n");
      out.write("                    <span class=\"text-gray-700 dark:text-gray-400\">Password</span>\n");
      out.write("                    <input\n");
      out.write("                      class=\"block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input\"\n");
      out.write("                      placeholder=\"***************\"\n");
      out.write("                      type=\"password\"\n");
      out.write("                      name=\"password\"\n");
      out.write("                    />\n");
      out.write("                    ");
 if (errors != null && errors.containsKey("password")) { 
      out.write("\n");
      out.write("                          <span class=\"text-xs text-red-600 dark:text-red-400\">\n");
      out.write("                            ");
      out.print( errors.get("password") );
      out.write("\n");
      out.write("                          </span>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                  </label>\n");
      out.write("                  <label class=\"block mt-4 text-sm\">\n");
      out.write("                    <span class=\"text-gray-700 dark:text-gray-400\">\n");
      out.write("                      Confirm password\n");
      out.write("                    </span>\n");
      out.write("                    <input\n");
      out.write("                      class=\"block w-full mt-1 text-sm dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:text-gray-300 dark:focus:shadow-outline-gray form-input\"\n");
      out.write("                      placeholder=\"***************\"\n");
      out.write("                      type=\"password\"\n");
      out.write("                      name=\"confirmPassword\"\n");
      out.write("                    />\n");
      out.write("                    ");
 if (errors != null && errors.containsKey("confirmPassword")) { 
      out.write("\n");
      out.write("                          <span class=\"text-xs text-red-600 dark:text-red-400\">\n");
      out.write("                            ");
      out.print( errors.get("confirmPassword") );
      out.write("\n");
      out.write("                          </span>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                  </label>\n");
      out.write("\n");
      out.write("                  <!-- You should use a button here, as the anchor is only used for the example  -->\n");
      out.write("                  <button\n");
      out.write("                    type=\"submit\"\n");
      out.write("                    class=\"block w-full px-4 py-2 mt-4 text-sm font-medium leading-5 text-center text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple\"\n");
      out.write("                    >\n");
      out.write("                    Create account\n");
      out.write("                  </button>\n");
      out.write("              </form>\n");
      out.write("\n");
      out.write("              <p class=\"mt-4\">\n");
      out.write("                <a\n");
      out.write("                  class=\"text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline\"\n");
      out.write("                  href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/auth/login\"\n");
      out.write("                >\n");
      out.write("                  Already have an account? Login\n");
      out.write("                </a>\n");
      out.write("              </p>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
